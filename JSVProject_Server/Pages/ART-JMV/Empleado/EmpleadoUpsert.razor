@*
    @page "/empleado/create"
@page "/empleado/edit/{id:int}"
@inject IEmpleadoRepository _empleadoRepository
@inject NavigationManager _navigationManager
@attribute [Authorize]
<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Empleado</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else
        {
            <EditForm Model="Empleado" OnValidSubmit="UpsertEmpleado">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@@*
                <div class="form-group">
                    <label>Nombre</label>
                    <InputText @bind-Value="Empleado.Nombre" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empleado.Nombre"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>DNI</label>
                    <InputText @bind-Value="Empleado.DNI" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empleado.DNI"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Domiclio</label>
                    <InputText @bind-Value="Empleado.Domicilio" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empleado.Domicilio"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Telefono</label>
                    <InputText @bind-Value="Empleado.Telefono" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empleado.Telefono"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="Empleado.Email" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empleado.Email"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="empleado" class="btn btn-secondary">Volver</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }


    private EmpleadoDTO Empleado { get; set; } = new EmpleadoDTO();
    private string Title { get; set; } = "Nuevo";
    public bool IsLoading { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Guardar";
                await LoadEmpleado();
            }
        }

    }

    private async Task LoadEmpleado()
    {
        IsLoading = true;
        StateHasChanged();
        Empleado = await _empleadoRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertEmpleado()
    {
        if (Empleado.Id == 0)
        {
            //create
            await _empleadoRepository.Create(Empleado);
        }
        else
        {
            //update
            await _empleadoRepository.Update(Empleado);
        }
        _navigationManager.NavigateTo("empleado");


    }
}

        *@
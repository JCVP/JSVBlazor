@page "/empresa/create"
@page "/empresa/edit/{id:int}"
@inject IEmpresaRepository _empresaRepository
@inject NavigationManager _navigationManager
@attribute [Authorize]
<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Empresa</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else
        {
            <EditForm Model="Empresa" OnValidSubmit="UpsertEmpresa">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>Razon Social</label>
                    <InputText @bind-Value="Empresa.RazonSocial" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empresa.RazonSocial"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Cuit</label>
                    <InputText @bind-Value="Empresa.Cuit" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empresa.Cuit"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Domiclio</label>
                    <InputText @bind-Value="Empresa.Domicilio" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empresa.Domicilio"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Telefono</label>
                    <InputText @bind-Value="Empresa.Telefono" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empresa.Telefono"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="Empresa.Email" class="form-control"></InputText>
                    <ValidationMessage For="()=>Empresa.Email"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="empresa" class="btn btn-secondary">Volver</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }


    private EmpresaDTO Empresa { get; set; } = new EmpresaDTO();
    private string Title { get; set; } = "Nuevo";
    public bool IsLoading { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Guardar";
                await LoadEmpresa();
            }
        }

    }

    private async Task LoadEmpresa()
    {
        IsLoading = true;
        StateHasChanged();
        Empresa = await _empresaRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertEmpresa()
    {
        if (Empresa.Id == 0)
        {
            //create
            await _empresaRepository.Create(Empresa);
        }
        else
        {
            //update
            await _empresaRepository.Update(Empresa);
        }
        _navigationManager.NavigateTo("empresa");


    }
}

